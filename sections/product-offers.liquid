{{ 'product-offers.css' | asset_url | stylesheet_tag }}

<style>
  .product-offers-bar[data-section-id="{{ section.id }}"] {
    --offers-bg: {{ section.settings.background_color }};
    --offers-text: {{ section.settings.text_color }};
    --offers-indicator: {{ section.settings.indicator_color }};
    --offers-border: {{ section.settings.background_color | color_mix: '#000000', 10 }};
  }
</style>

<div class="product-offers-bar" data-section-id="{{ section.id }}">
  <div class="offers-header">
    <span class="offers-indicator"></span>
    <span class="offers-title">{{ section.settings.heading | default: '11 Limited Time Offers' }}</span>
  </div>
  
  <div class="offers-container">
    <div class="offers-scroll-wrapper">
      <div class="offers-list">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'offer' %}
              <div class="offer-item" {{ block.shopify_attributes }}>
                <div class="offer-label">{{ block.settings.label }}</div>
                {% if block.settings.code != blank %}
                  <div class="offer-code-group">
                    <span class="offer-code-text">Code:</span>
                    <button class="offer-code-button" data-code="{{ block.settings.code }}">
                      {{ block.settings.code }}
                      <svg class="copy-icon" width="12" height="12" viewBox="0 0 12 12" fill="none">
                        <path d="M8 4.5V3.3c0-.56 0-.84-.109-1.054a1 1 0 0 0-.437-.437C7.24 1.5 6.96 1.5 6.4 1.5H3.2c-.56 0-.84 0-1.054.109a1 1 0 0 0-.437.437C1.5 2.26 1.5 2.54 1.5 3.1v3.2c0 .56 0 .84.109 1.054a1 1 0 0 0 .437.437c.214.109.494.109 1.054.109h1.2m1.8-3.6h3.2c.56 0 .84 0 1.054.109a1 1 0 0 0 .437.437c.109.214.109.494.109 1.054v3.2c0 .56 0 .84-.109 1.054a1 1 0 0 0-.437.437C9.14 10.5 8.86 10.5 8.3 10.5H5.1c-.56 0-.84 0-1.054-.109a1 1 0 0 1-.437-.437C3.5 9.74 3.5 9.46 3.5 8.9V5.7c0-.56 0-.84.109-1.054a1 1 0 0 1 .437-.437C4.26 4.1 4.54 4.1 5.1 4.1Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </button>
                  </div>
                {% endif %}
              </div>
          {% endcase %}
        {% endfor %}
      </div>
    </div>
    
    {% if section.blocks.size > 4 %}
      <button class="offers-nav offers-nav--prev" aria-label="Previous offers">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
          <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      <button class="offers-nav offers-nav--next" aria-label="Next offers">
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
          <path d="M6 12L10 8L6 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const section = document.querySelector('[data-section-id="{{ section.id }}"]');
    if (!section) return;
    
    const scrollWrapper = section.querySelector('.offers-scroll-wrapper');
    const offersList = section.querySelector('.offers-list');
    const prevBtn = section.querySelector('.offers-nav--prev');
    const nextBtn = section.querySelector('.offers-nav--next');
    
    // Scroll functionality
    function scrollOffers(direction) {
      const scrollAmount = 200;
      const currentScroll = scrollWrapper.scrollLeft;
      
      if (direction === 'next') {
        scrollWrapper.scrollTo({
          left: currentScroll + scrollAmount,
          behavior: 'smooth'
        });
      } else {
        scrollWrapper.scrollTo({
          left: currentScroll - scrollAmount,
          behavior: 'smooth'
        });
      }
    }
    
    // Update button visibility
    function updateNavButtons() {
      if (!prevBtn || !nextBtn) return;
      
      const scrollLeft = scrollWrapper.scrollLeft;
      const scrollWidth = offersList.scrollWidth;
      const clientWidth = scrollWrapper.clientWidth;
      
      prevBtn.style.display = scrollLeft > 0 ? 'flex' : 'none';
      nextBtn.style.display = scrollLeft < scrollWidth - clientWidth - 10 ? 'flex' : 'none';
    }
    
    // Event listeners
    if (prevBtn) prevBtn.addEventListener('click', () => scrollOffers('prev'));
    if (nextBtn) nextBtn.addEventListener('click', () => scrollOffers('next'));
    
    if (scrollWrapper) {
      scrollWrapper.addEventListener('scroll', updateNavButtons);
      window.addEventListener('resize', updateNavButtons);
      updateNavButtons();
    }
    
    // Copy code functionality
    const codeButtons = section.querySelectorAll('.offer-code-button');
    codeButtons.forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        const code = this.dataset.code;
        const originalHTML = this.innerHTML;
        
        navigator.clipboard.writeText(code).then(() => {
          this.innerHTML = 'Copied! <svg class="copy-icon" width="12" height="12" viewBox="0 0 12 12" fill="none"><path d="M3 6L5 8L9 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>';
          this.classList.add('copied');
          
          setTimeout(() => {
            this.innerHTML = originalHTML;
            this.classList.remove('copied');
          }, 2000);
        });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Product Offers Bar",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "11 Limited Time Offers"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#e8f5e9"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#1b5e20"
    },
    {
      "type": "color",
      "id": "indicator_color",
      "label": "Indicator color",
      "default": "#4caf50"
    }
  ],
  "blocks": [
    {
      "type": "offer",
      "name": "Offer",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Offer label",
          "default": "FREE GIFT"
        },
        {
          "type": "text",
          "id": "code",
          "label": "Offer code",
          "info": "Leave empty for offers without codes"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Offers Bar",
      "blocks": [
        {
          "type": "offer",
          "settings": {
            "label": "FREE GIFT",
            "code": "FREEBTAN"
          }
        },
        {
          "type": "offer",
          "settings": {
            "label": "FREE GIFT",
            "code": "FREEHANDMALAI"
          }
        },
        {
          "type": "offer",
          "settings": {
            "label": "20% OFF",
            "code": "NEWHABIT50"
          }
        },
        {
          "type": "offer",
          "settings": {
            "label": "FREE",
            "code": ""
          }
        }
      ]
    }
  ]
}
{% endschema %}