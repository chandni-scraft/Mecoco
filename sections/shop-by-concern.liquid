{% comment %}
  Shop by Concern Section
  - Tabs for multiple collections (blocks)
  - Mobile: tabs are horizontally scrollable, no overflow
  - Settings: container width, heading, products per tab, grid options
{% endcomment %}

{% liquid
  assign section_id = section.id
  assign heading = section.settings.heading
  assign container = section.settings.container
  assign products_per_tab = section.settings.products_per_tab
  assign products_per_row_desktop = section.settings.products_per_row_desktop
  assign products_per_row_mobile = section.settings.products_per_row_mobile
%}

{% capture children %}
  <div id="shop-by-concern-{{ section_id }}" class="shop-by-concern">
    <div class="shop-by-concern__container container container--{{ container }}">
      {%- if heading != blank -%}
        <h2 class="shop-by-concern__heading">{{ heading }}</h2>
      {%- endif -%}

      {%- if section.blocks.size > 0 -%}
        <div class="shop-by-concern__tabs" role="tablist" aria-label="Collections tabs">
          <div class="shop-by-concern__tabs-scroll">
            {%- for block in section.blocks -%}
              {%- assign col = block.settings.collection -%}
              {%- assign is_active = forloop.first -%}
              <button
                id="tab-{{ section_id }}-{{ forloop.index }}"
                class="shop-by-concern__tab{% if is_active %} is-active{% endif %}"
                role="tab"
                aria-selected="{{ is_active }}"
                aria-controls="panel-{{ section_id }}-{{ forloop.index }}"
                tabindex="{% if is_active %}0{% else %}-1{% endif %}"
                {{ block.shopify_attributes }}
              >
                {{ block.settings.custom_label | default: col.title | escape }}
              </button>
            {%- endfor -%}
          </div>
        </div>

        <div class="shop-by-concern__panels">
          {%- for block in section.blocks -%}
            {%- assign col = block.settings.collection -%}
            {%- assign is_active = forloop.first -%}
            <div
              id="panel-{{ section_id }}-{{ forloop.index }}"
              class="shop-by-concern__panel{% if is_active %} is-active{% endif %}"
              role="tabpanel"
              aria-labelledby="tab-{{ section_id }}-{{ forloop.index }}"
              {% unless is_active %}hidden{% endunless %}
              {{ block.shopify_attributes }}
            >
              {%- if col -%}
                <div class="shop-by-concern__grid" data-grid>
                  {%- for product in col.products limit: products_per_tab -%}
                    <div class="shop-by-concern__grid-item">
                      {% # theme-check-disable %}
                      {% content_for 'block', type: '_product-card', id: 'product-card', closest.product: product, collection: col %}
                      {% # theme-check-enable %}
                    </div>
                  {%- endfor -%}
                </div>
              {%- else -%}
                <div class="shop-by-concern__empty">{{ 'content.no_products_found' | t }}</div>
              {%- endif -%}
            </div>
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
{% endcapture %}

{% render 'section', section: section, children: children %}

<script>
    (function(){
      var root = document.getElementById('shop-by-concern-{{ section_id }}');
      if (!root) return;
      var tabs = Array.prototype.slice.call(root.querySelectorAll('.shop-by-concern__tab'));
      var panels = Array.prototype.slice.call(root.querySelectorAll('.shop-by-concern__panel'));

      function activateTab(tab){
        var target = tab.getAttribute('aria-controls');
        tabs.forEach(function(t){
          var selected = t === tab;
          t.classList.toggle('is-active', selected);
          t.setAttribute('aria-selected', selected ? 'true' : 'false');
          t.setAttribute('tabindex', selected ? '0' : '-1');
        });
        panels.forEach(function(p){
          var isTarget = p.id === target;
          p.classList.toggle('is-active', isTarget);
          if (isTarget) {
            p.removeAttribute('hidden');
          } else {
            p.setAttribute('hidden', '');
          }
        });
      }

      tabs.forEach(function(tab){
        tab.addEventListener('click', function(){ activateTab(tab); });
        tab.addEventListener('keydown', function(e){
          var idx = tabs.indexOf(tab);
          if (e.key === 'ArrowRight') {
            e.preventDefault();
            var next = tabs[(idx + 1) % tabs.length];
            next.focus(); activateTab(next);
          } else if (e.key === 'ArrowLeft') {
            e.preventDefault();
            var prev = tabs[(idx - 1 + tabs.length) % tabs.length];
            prev.focus(); activateTab(prev);
          }
        });
      });
    })();
  </script>

  <style>
    #shop-by-concern-{{ section_id }} .shop-by-concern__container {
      margin-inline: auto;
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__heading {
      margin: 0 0 1rem 0;
      text-align: center;
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__tabs {
      overflow: hidden;
      margin-bottom: 1rem;
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__tabs-scroll {
      display: flex;
      gap: .5rem;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: thin;
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__tab {
      white-space: nowrap;
      padding: .6rem 1rem;
      border: 1px solid rgba(0,0,0,.12);
      border-radius: 999px;
      background: var(--color-background, #fff);
      cursor: pointer;
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__tab.is-active {
      background: var(--color-foreground, #111);
      color: var(--color-background, #fff);
      border-color: var(--color-foreground, #111);
    }
    #shop-by-concern-{{ section_id }} .shop-by-concern__grid {
      display: grid;
      gap: var(--grid-gap, 16px);
      grid-template-columns: repeat({{ products_per_row_mobile }}, minmax(0, 1fr));
    }
    @media (min-width: 768px) {
      #shop-by-concern-{{ section_id }} .shop-by-concern__grid {
        grid-template-columns: repeat({{ products_per_row_desktop }}, minmax(0, 1fr));
      }
    }
  </style>

{% schema %}
{
  "name": "Shop by concern",
  "tag": "section",
  "class": "shop-by-concern-section",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Shop by concern" },
    {
      "type": "select",
      "id": "container",
      "label": "Container width",
      "default": "lg",
      "options": [
        { "value": "sm", "label": "Small" },
        { "value": "md", "label": "Medium" },
        { "value": "lg", "label": "Large" },
        { "value": "xl", "label": "Full width" }
      ]
    },
    {
      "type": "range",
      "id": "products_per_tab",
      "min": 2,
      "max": 50,
      "step": 1,
      "label": "Products per tab",
      "default": 8
    },
    {
      "type": "range",
      "id": "products_per_row_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Columns on mobile",
      "default": 2
    },
    {
      "type": "range",
      "id": "products_per_row_desktop",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "default",
      "options": [
        { "value": "default", "label": "Default" },
        { "value": "soft", "label": "Soft" },
        { "value": "contrast", "label": "Contrast" }
      ]
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection tab",
      "limit": 12,
      "settings": [
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "text", "id": "custom_label", "label": "Tab label (optional)" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Shop by concern",
      "category": "Collection",
      "blocks": [
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" }
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
/* Additional theme editor scoped styles can go here if needed */
{% endstylesheet %}


