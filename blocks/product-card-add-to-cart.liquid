{% liquid
  assign product = closest.product
  if product == blank or product.available == false
    assign can_add_to_cart = false
  else
    assign can_add_to_cart = true
  endif
%}

{% if product != blank %}
  <div class="product-card-add-to-cart">
    {% if can_add_to_cart %}
      {% if product.variants.size == 1 %}
        <!-- Single variant - direct add to cart -->
        <form method="post" action="/cart/add" class="product-card-atc-form">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <input type="hidden" name="quantity" value="1">
          <button type="submit" class="product-card-atc-button">
            {{ block.settings.button_text }}
          </button>
        </form>
      {% else %}
        <!-- Multiple variants - link to product page -->
        <a href="{{ product.url }}" class="product-card-atc-button product-card-atc-button--link">
          {{ block.settings.select_options_text }}
        </a>
      {% endif %}
    {% else %}
      <!-- Out of stock -->
      <button type="button" class="product-card-atc-button product-card-atc-button--disabled" disabled>
        {{ block.settings.sold_out_text }}
      </button>
    {% endif %}
  </div>
{% endif %}

<style>
  .product-card-add-to-cart {
    width: 100%;
    margin-top: 0.5rem;
  }

  .product-card-atc-form {
    width: 100%;
  }

  .product-card-atc-button {
    width: 100%;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: var(--border-radius-base, 4px);
    background-color: var(--color-button-primary, #000);
    color: var(--color-button-primary-text, #fff);
    font-size: 0.875rem;
    font-weight: 500;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    display: block;
    line-height: 1;
  }

  .product-card-atc-button:hover:not(:disabled) {
    opacity: 0.9;
    transform: translateY(-1px);
  }

  .product-card-atc-button--link {
    background-color: var(--color-button-secondary, #f0f0f0);
    color: var(--color-button-secondary-text, #000);
  }

  .product-card-atc-button--disabled {
    background-color: var(--color-button-disabled, #ccc);
    color: var(--color-button-disabled-text, #666);
    cursor: not-allowed;
    opacity: 0.6;
  }

  @media screen and (max-width: 749px) {
    .product-card-atc-button {
      font-size: 1rem;
      padding: 1rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('.product-card-atc-form');
    
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const button = form.querySelector('.product-card-atc-button');
        const originalText = button.textContent;
        button.textContent = '{{ block.settings.adding_text }}';
        button.disabled = true;
        
        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: new URLSearchParams(new FormData(form))
        })
        .then(response => response.json())
        .then(data => {
          button.textContent = '{{ block.settings.added_text }}';
          
          // Update cart count if element exists
          const cartCount = document.querySelector('.cart-count');
          if (cartCount && data.item_count) {
            cartCount.textContent = data.item_count;
          }
          
          setTimeout(() => {
            button.textContent = originalText;
            button.disabled = false;
          }, 2000);
          
          // Trigger cart drawer if it exists
          if (window.Shopify && window.Shopify.theme && window.Shopify.theme.openCartDrawer) {
            window.Shopify.theme.openCartDrawer();
          }
        })
        .catch(error => {
          console.error('Error:', error);
          button.textContent = originalText;
          button.disabled = false;
        });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Add to Cart Button",
  "settings": [
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "select_options_text",
      "label": "Select options text",
      "default": "Select Options"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Sold out text",
      "default": "Sold Out"
    },
    {
      "type": "text",
      "id": "adding_text",
      "label": "Adding to cart text",
      "default": "Adding..."
    },
    {
      "type": "text",
      "id": "added_text",
      "label": "Added to cart text",
      "default": "Added!"
    }
  ]
}
{% endschema %}